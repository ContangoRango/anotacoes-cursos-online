clear
install.packages("shiny")
library(shiny)
library(shiny)
library(shiny)
ui <- fluidPage(
'Hello, world"'
)
server <- function(input, output, session){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
textInput("name", "What is your name?"),
# CODE BELOW: Display the text output, greeting
# Make sure to add a comma after textInput()
textOutput("greeting")
)
server <- function(input, output) {
# CODE BELOW: Render a text output, greeting
output$greeting <- renderText({paste("Hello,",input$name)})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Baby Name Explorer"),
sidebarLayout(
sidebarPanel(textInput('name', 'Enter Name', 'David')),
mainPanel(plotOutput('trend'))
)
)
server <- function(input, output, session) {
output$trend <- renderPlot({
data_name <- subset(
babynames, name = input$name
)
# CODE BELOW: Update to display a line plot of the input name
ggplot(data_name) +
geom_line(aes(x = year, y = prop, color = sex))
})
}
shinyApp(ui = ui, server = server)
install.packages("ggplot2")
library(shiny)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Baby Name Explorer"),
sidebarLayout(
sidebarPanel(textInput('name', 'Enter Name', 'David')),
mainPanel(plotOutput('trend'))
)
)
server <- function(input, output, session) {
output$trend <- renderPlot({
data_name <- subset(
babynames, name = input$name
)
# CODE BELOW: Update to display a line plot of the input name
ggplot(data_name) +
geom_line(aes(x = year, y = prop, color = sex))
})
}
shinyApp(ui = ui, server = server)
help(stat_smooth)
??stat_smooth
library(ggplot2)
library(ggplot)
2+2
names(roulette_vector) <- days_vector
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
library(gapminder)
library(dplyr)
install.packages("gapminder")
install.packages("dplyr")
library(gapminder)
library(dplyr)
str(gapminder)
head(gapminder)
install.packages("tidyverse")
gapminder %>%
filter(year == 1967)
gapminder %>%
arrange(gdpPercap)
gapminder %>%
filter(year == 2007) %>%
arrange(desc(gdpPercap))
gapminder %>%
mutate(pop = pop/1000000)
ggplot(gapminder_1952, aes(pop, lifeExp,
color = continent)) +
geom_point()
ggplot(gapminder_1952, aes(pop, lifeExp,
color = continent)) +
geom_point()
library(ggplot2)
ggplot(gapminder_1952, aes(pop, lifeExp,
color = continent)) +
geom_point()
gapminder_1952 <- gapminder %>%
filter(year == 1952)
ggplot(gapminder_1952, aes(pop, lifeExp,
color = continent)) +
geom_point()
ggplot(gapminder_1952, aes(pop, lifeExp,
color = continent)) +
scale_x_log10()+
geom_point()
ggplot(gapminder_1952, aes(pop, lifeExp,
color = continent,
size = gdpPercap)) +
scale_x_log10()+
geom_point()
gapminder %>%
filter(year == 2007) %>%
summarize(mean(lifeExp))
gapminder %>%
filter(year == 2007) %>%
summarize(meanLifeExp = mean(lifeExp),
totalPop = sum(pop))
gapminder %>%
filter(year == 2007) %>%
summarize(meanLifeExp = mean(lifeExp),
totalPop = sum(as.numeric(pop)))
ls()
netflix_data <- read.csv("netflix_titles.csv")
netflix_data <- read.csv("netflix_titles.csv")
setwd("~/Downloads/DataCamp/3 - getting data into R")
netflix_data <- read.csv("netflix_titles.csv")
str(netflix_data)
head(netflix_data)
summary(netflix_data)
netflix_brasil <- netflix_data %>%
filter(country == Brasil)
head(netflix_brasil)
netflix_data <- read.csv("netflix_titles.csv")
str(netflix_data)
head(netflix_data)
summary(netflix_data)
netflix_brasil <- netflix_data %>%
filter(country == Brasil)
head(netflix_brasil)
library(dplyr)
library(ggplot2)
netflix_data <- read.csv("netflix_titles.csv")
str(netflix_data)
head(netflix_data)
summary(netflix_data)
netflix_brasil <- netflix_data %>%
filter(country == Brasil)
head(netflix_brasil)
summary(netflix_data)
netflix_brasil <- netflix_data %>%
filter(country == Brazil)
head(netflix_brasil)
summary(netflix_data)
netflix_brasil <- netflix_data %>%
filter(country == "Brazil")
head(netflix_brasil)
netflix_brasil_genero <- netflix_data %>%
filter(country == "Brazil") %>%
group_by(type)
View(netflix_brasil_genero)
View(netflix_brasil_genero)
netflix_brasil_tipo <- netflix_data %>%
filter(country == "Brazil") %>%
group_by(type)
ggplot(netflix_brasil_tipo, aes(release_year,director))+
geom_point()
head(netflix_data)
ggplot(netflix_data, aes(country, type))+
geom_line()
